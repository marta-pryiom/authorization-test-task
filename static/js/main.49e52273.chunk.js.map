{"version":3,"sources":["Component/UserMenu/UserMenu.module.css","Component/Login/Login.module.css","Component/Container/Container.module.css","Component/ForgotName/ForgotName.module.css","redux/user/operations.js","Component/ForgotName/ForgotName.js","Component/images/sprite.svg","Component/Login/Login.js","Component/Container/Container.js","images/sprite.svg","Component/UserMenu/UserMenu.js","redux/user/selectors.js","Component/App/App.js","redux/user/slices.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","logIn","createAsyncThunk","credentials","a","rejectWithValue","console","log","post","data","toast","success","message","ForgotName","active","setActive","activebg","s","bgActive","bg","activeContent","contentActive","content","className","onClick","e","stopPropagation","type","name","formItem","placeholder","btn","Login","isAuth","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","value","reset","loginBox","boxAvatar","alt","src","avatarIcon","triangle","href","pathToSprite","triangleTwo","circle","circleTwo","square","box","title","onSubmit","preventDefault","labelItemEmail","iconEnvelope","onChange","labelPassword","iconLock","disabled","length","addBox","forgotInfo","forgotAddInfo","addBtn","Icon","Container","children","container","UserMenu","userIcon","getIsLoggedIn","state","App","useSelector","authSlice","createSlice","initialState","extraReducers","fulfilled","payload","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.49e52273.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userIcon\":\"UserMenu_userIcon__1kbC_\",\"title\":\"UserMenu_title__GO-MA\",\"box\":\"UserMenu_box__wVYJ7\",\"btn\":\"UserMenu_btn__2a7QP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__3nCR5\",\"form\":\"Login_form__3ihev\",\"formItem\":\"Login_formItem__1V4-Q\",\"labelItemEmail\":\"Login_labelItemEmail__3Vq_L\",\"iconEnvelope\":\"Login_iconEnvelope__3bzqW\",\"labelPassword\":\"Login_labelPassword__wZIJ5\",\"iconLock\":\"Login_iconLock__1aHRn\",\"box\":\"Login_box__3xBW9\",\"loginBox\":\"Login_loginBox__tnrg0\",\"btn\":\"Login_btn__1h1GB\",\"addBtn\":\"Login_addBtn__2frY2\",\"forgotInfo\":\"Login_forgotInfo__3U4LO\",\"addBox\":\"Login_addBox__k0M-B\",\"forgotAddInfo\":\"Login_forgotAddInfo__3NoG5\",\"Icon\":\"Login_Icon__1eXB4\",\"boxAvatar\":\"Login_boxAvatar__1GlWm\",\"avatarIcon\":\"Login_avatarIcon__2wiKh\",\"triangle\":\"Login_triangle__30n1U\",\"triangleTwo\":\"Login_triangleTwo__3FiD5\",\"square\":\"Login_square__3Tcas\",\"circle\":\"Login_circle__3aV05\",\"circleTwo\":\"Login_circleTwo__cY-f0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__33CX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ForgotName_bg__3mVf1\",\"bgActive\":\"ForgotName_bgActive__2hXnY\",\"content\":\"ForgotName_content__2oSpa\",\"contentActive\":\"ForgotName_contentActive__1KQQC\"};","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\naxios.defaults.baseURL = 'https://site.ualegion.com/';\r\nconst userLogin = 'api/v1/security/login';\r\n// const userLogOut = 'api/v1/users/1';\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\nexport const logIn = createAsyncThunk(\r\n    'auth/login',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            console.log(credentials);\r\n            const { data } = await axios.post(userLogin, credentials);\r\n            token.set(data.token);\r\n            console.log(data);\r\n            return data;\r\n        } catch (err) {\r\n            toast.success('No such user');\r\n            rejectWithValue(err.message);\r\n        }\r\n    },\r\n);\r\n// export const logOut = createAsyncThunk(\r\n//     'auth/logout',\r\n//     async (_, { rejectWithValue, getState }) => {\r\n//         const state = getState();\r\n//         console.log(state);\r\n//         token.set(state.token);\r\n//         try {\r\n//             await axios.delete(userLogOut);\r\n//             token.unset();\r\n//         } catch (err) {\r\n//             rejectWithValue(err.message);\r\n//         }\r\n//     },\r\n// );\r\n\r\n// export const logIn = credentials => dispatch => {\r\n//     dispatch(logInRequest());\r\n//     axios\r\n//         .post(userLogin, credentials)\r\n//         .then(response => {\r\n//             token.set(response.data.token);\r\n//             dispatch(logInSuccess(response.data));\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch(logInError(error.message));\r\n//             toast.error('Please register or enter correct data ');\r\n//         });\r\n// };\r\n// export const logOut = () => {\r\n//     token.unset();\r\n// };\r\n","import s from './ForgotName.module.css';\r\nfunction ForgotName({ active, setActive }) {\r\n    const activebg = !active ? s.bg : s.bgActive;\r\n    const activeContent = !active ? s.content : s.contentActive;\r\n    return (\r\n        <div className={`${activebg}`} onClick={() => setActive(false)}>\r\n            <div\r\n                className={`${activeContent}`}\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                <form>\r\n                    <label>\r\n                        Please enter your email to search for your account.\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className={s.formItem}\r\n                            // value={email}\r\n                            placeholder=\"email\"\r\n                            // autocomplete=\"on\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" className={s.btn}>\r\n                        OK\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ForgotName;\r\n","export default __webpack_public_path__ + \"static/media/sprite.c1aea847.svg\";","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from '../../redux/user/operations';\r\nimport s from './Login.module.css';\r\nimport ForgotName from '../ForgotName/ForgotName';\r\nimport pathToSprite from '../images/sprite.svg';\r\n\r\nfunction Login({ isAuth }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [active, setActive] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const avatar = 'https://www.syn-enosis.gr/media/1909/group-5-2x.png';\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        switch (name) {\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'password':\r\n                return setPassword(value);\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(logIn({ email, password }));\r\n        reset();\r\n    };\r\n    const reset = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n    return (\r\n        !isAuth && (\r\n            <>\r\n                <div className={s.loginBox}>\r\n                    <div className={s.boxAvatar}>\r\n                        <img\r\n                            alt=\"avatar\"\r\n                            src={avatar}\r\n                            className={s.avatarIcon}\r\n                        />\r\n                        <svg className={s.triangle}>\r\n                            <use href={pathToSprite + '#triangle'}></use>\r\n                        </svg>\r\n                        <svg className={s.triangleTwo}>\r\n                            <use href={pathToSprite + '#play'}></use>\r\n                        </svg>\r\n                        <svg className={s.circle}>\r\n                            <use href={pathToSprite + '#circle'}></use>\r\n                        </svg>\r\n                        <svg className={s.circleTwo}>\r\n                            <use href={pathToSprite + '#circle'}></use>\r\n                        </svg>\r\n                        <svg className={s.square}>\r\n                            <use href={pathToSprite + '#square'}></use>\r\n                        </svg>\r\n                    </div>\r\n                    <div className={s.box}>\r\n                        <h1 className={s.title}>Member Login</h1>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label>\r\n                                <div className={s.labelItemEmail}>\r\n                                    <svg className={s.iconEnvelope}>\r\n                                        <use\r\n                                            href={\r\n                                                pathToSprite + '#icon-envelope'\r\n                                            }\r\n                                        ></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        placeholder=\"Email\"\r\n                                        className={s.formItem}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                            </label>\r\n\r\n                            <label>\r\n                                <div className={s.labelPassword}>\r\n                                    <svg className={s.iconLock}>\r\n                                        <use\r\n                                            href={pathToSprite + '#icon-locked'}\r\n                                        ></use>\r\n                                    </svg>\r\n\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        value={password}\r\n                                        placeholder=\"Password\"\r\n                                        className={s.formItem}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                            </label>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className={s.btn}\r\n                                disabled={email.length === 0}\r\n                            >\r\n                                LOGIN\r\n                            </button>\r\n                        </form>\r\n                        <div className={s.addBox}>\r\n                            <button\r\n                                className={s.forgotInfo}\r\n                                onClick={() => setActive(true)}\r\n                            >\r\n                                Forgot{' '}\r\n                                <span className={s.forgotAddInfo}>\r\n                                    Username/Password?\r\n                                </span>\r\n                            </button>\r\n\r\n                            <button type=\"button\" className={s.addBtn}>\r\n                                Create your Account\r\n                                <svg className={s.Icon}>\r\n                                    <use\r\n                                        href={pathToSprite + '#arrow-right'}\r\n                                    ></use>\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ForgotName active={active} setActive={setActive} />\r\n            </>\r\n        )\r\n    );\r\n}\r\nexport default Login;\r\n","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","export default __webpack_public_path__ + \"static/media/sprite.c1aea847.svg\";","// import { useDispatch } from 'react-redux';\r\n// import { getUsername } from '../../redux/auth/auth-selectors';\r\n// import { logOut } from '../../redux/user/operations';\r\nimport pathToSprite from '../../images/sprite.svg';\r\nimport s from './UserMenu.module.css';\r\n\r\nfunction UserMenu() {\r\n    // const dispatch = useDispatch();\r\n    // const nameOfUser = useSelector(getUsername);\r\n\r\n    return (\r\n        <>\r\n            <div className={s.box}>\r\n                <svg className={s.userIcon}>\r\n                    <use href={pathToSprite + '#user'}></use>\r\n                </svg>\r\n                <p className={s.title}>Welcome</p>\r\n                <button\r\n                    className={s.btn}\r\n                    type=\"button\"\r\n                    // onClick={() => dispatch(logOut())}\r\n                >\r\n                    Log out\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default UserMenu;\r\n","export const getIsLoggedIn = state => state.isAuth;\r\n","import Login from '../Login';\r\nimport { useSelector } from 'react-redux';\r\nimport Container from '../Container';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport { getIsLoggedIn } from '../../redux/user/selectors';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n    const isAuth = useSelector(getIsLoggedIn);\r\n    return !isAuth ? (\r\n        <>\r\n            <ToastContainer />\r\n            <Container>\r\n                <Login isAuth={isAuth} />\r\n            </Container>\r\n        </>\r\n    ) : (\r\n        <UserMenu />\r\n    );\r\n}\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { logIn, logOut } from './operations';\r\nconst initialState = {\r\n    email: '',\r\n    token: '',\r\n    isAuth: false,\r\n};\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [logIn.fulfilled](state, { payload }) {\r\n            state.email = payload.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n        },\r\n        // [logOut.fulfilled](state, _) {\r\n        //     state.email = '';\r\n        //     state.token = '';\r\n        //     state.isAuth = false;\r\n        // },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport authSlice from './user/slices';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nconst persistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, authSlice);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [\r\n                    FLUSH,\r\n                    REHYDRATE,\r\n                    PAUSE,\r\n                    PERSIST,\r\n                    PURGE,\r\n                    REGISTER,\r\n                ],\r\n            },\r\n        }).concat(logger),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './Component/App/App';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate persistor={persistor} loading={null}>\n                {/*<Router> */}\n                <App />\n                {/* </Router>*/}\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}